@model ZeroKWeb.Controllers.BattlesController.BattleSearchModel

@{
	Layout = "";
}
<style>
    .mission > div {
        background: rgba(0,0,0,0.5);
        color: white;
        transition: 0.5s;
    }
    .mission > div:hover {
        background: rgba(0,0,0,0.8);
    }
    .battle-contents {
        padding: 1em;
        margin: 0.5em 0.25em;
    }

    .mission h3, .duration {
        margin-bottom: 0.5em;
    }
    .players, .nonplayers, .place, .duration {
        display: inline-block;
    }
    .place:before {
        content: "on ";
    }
    .mission img {
        margin-right: 1em;
        float: left;
    }
</style>
@foreach (var m in Model.Data) {
    var playercount = m.Players.Count(p => !p.IsSpectator);
    var spectatorcount = m.Players.Count(p => p.IsSpectator);
    string botsInvolved = m.Battle.HasBots ? " +<i class='fa fa-microchip'></i> " : "";
    string nonplayers = "";
    if (spectatorcount > 0)
    {
        nonplayers += $"<i class='fa fa-binoculars'></i> {spectatorcount} ";
    }
    if (m.Battle.HasBots)
    {
        nonplayers = $"+<i class='fa fa-microchip'></i>";
    }
    if (!string.IsNullOrEmpty(nonplayers))
    {
        nonplayers = $"({nonplayers})";
    }
    string hourglass = "fa-hourglass-start";
    if (m.Battle.Duration > 15 * 60) { hourglass = "fa-hourglass-1"; }
    if (m.Battle.Duration > 30 * 60) { hourglass = "fa-hourglass-2"; }
    if (m.Battle.Duration > 45 * 60) { hourglass = "fa-hourglass-3"; }

	<a class="mission" href='@Url.Action("Detail", new { id = m.Battle.SpringBattleID })'>
        <div class="corners-wrapper">
            <div class="battle-contents">
                <img src='/Resources/@m.Map.ThumbnailName' />
                <h3>@m.Battle.Title</h3>

                <div class="players">@m.Battle.Teams</div>
                <div class="place">@m.Map.InternalName</div>
                <div class="nonplayers">@Html.Raw(nonplayers)</div>
                <div class="duration"><i class='fa @hourglass'></i> @TimeSpan.FromSeconds(m.Battle.Duration).ToReadableTime()</div>

                <div class="time">@m.Battle.StartTime - @((DateTime.UtcNow - m.Battle.StartTime).ToAgoString())</div>
                <br style="clear: both;" />
            </div>
            <div class="corners corners-top"></div>
            <div class="corners corners-bottom"></div>
        </div>
	</a>
}
