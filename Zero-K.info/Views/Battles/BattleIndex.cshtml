@model ZeroKWeb.Controllers.BattlesController.BattleSearchModel
@using ZkData
@{
    Page.Title = "Replay Search";
}
<script>
    $(document).ready(function () {
        InitToggleSwitch();
        InitSliderRange();
    });

    function InitSliderRange() {
        function display(func, val, softcap = null) {
            switch (func) {
                case "minRank": return "<img src='Img/ranks/0_" + val + ".png' />"; break;
                case "maxRank": return "<img src='Img/ranks/7_" + val + ".png' />"; break;
                default:
                    if (val == softcap) return "∞";
                    else return val;
            }
        }
        function setHandlePosition(e, slider) {

        }

        $(".slider-range").each(function (i, slider) {
            // link relevant input fields
            var minField = $("#" + $(slider).data("min"));
            var maxField = $("#" + $(slider).data("max"));
            var softcap = $(slider).data("softcap");
            var minValue = minField.attr("min");
            var maxValue = maxField.attr("max");

            console.log("minvalue: ", minValue, "maxvalue: ", maxValue);

            // generate tick marks
            var tickmarks = "";
            for (var i = minValue; i <= maxValue; i++) {
                tickmarks += "<div id='tickmark" + i + "' data-value='" + i + "' class='tickmark'></div>";
            }
            $(slider).prepend(tickmarks);

            // place handles on min/max ticks
            var min_handle = $(slider).children(".min-value");
            var max_handle = $(slider).children(".max-value");
            min_handle.css("left", $(slider).children("#tickmark" + minValue).position().left - min_handle.width() / 2)
                .html(display(min_handle.data("display"), minValue));
            max_handle.css("left", $(slider).children("#tickmark" + maxValue).position().left - max_handle.width() / 2)
                .html(display(max_handle.data("display"), maxValue, softcap));

            // bind events
            $(slider).mousedown(function (e) {
                var mouse_event = e.originalEvent;

                // find closest handle
                var min_handle_distance = Math.abs(mouse_event.x - min_handle.position().left);
                var max_handle_distance = Math.abs(mouse_event.x - max_handle.position().left);
                var closest_handle = min_handle_distance <= max_handle_distance ? min_handle : max_handle;

                // grab closest handle
                $(slider).data("handle", closest_handle);
            });
            $(document).mousemove(function (e) {
                // don't do anything if we're not dragging anything
                var active_handle = $(slider).data("handle");
                if (!active_handle) return;

                var mouse_event = e.originalEvent;

                // find closest tickmark
                var closest_tick = null;
                var previous_distance = Infinity;
                $(slider).children(".tickmark").each(function (i, tickmark) {
                    var distance = Math.abs(mouse_event.x - 2 * $(slider).position().left - $(tickmark).position().left);
                    if (distance < previous_distance) {
                        previous_distance = distance;
                        closest_tick = $(tickmark);
                    }
                });

                // snap handle to tick location
                var offset = closest_tick.position().left - active_handle.width() / 2;
                var content = display(active_handle.data("display"), closest_tick.data("value"), softcap);
                active_handle.data("value", closest_tick.data("value")).css("left", offset).html(content);

                // resize included range bar
                $(slider).children(".included-range")
                    .css("left", min_handle.position().left)
                    .css("right", $(slider).width() + $(slider).position().left - max_handle.position().left - max_handle.width());

            }).mouseup(function () {
                // don't do anything if we're not dragging anything
                var active_handle = $(slider).data("handle");
                if (!active_handle) return;

                // set hidden input values
                $(minField).val(min_handle.data("value")).change();
                $(maxField).val(max_handle.data("value")).change();

                // drop handle
                $(slider).data("handle", null);
            });
        });
    }
</script>

<div id="summarytransition"></div>
<div class="content">
    <div class="page-summary">
        @{ Html.RenderPartial("_BattleSearch"); }
    </div>

    <div id="ajaxScrollTarget">
        @{ Html.RenderPartial("BattleTileList", Model); }
    </div>

    <div style="height: 1000px;" />
</div>
