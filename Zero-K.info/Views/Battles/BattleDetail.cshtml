@using ZeroKWeb
@using PlasmaShared
@using ZkData
@model ZkData.SpringBattle
@{
    Page.Title = "Battle " + Model.SpringBattleID + " detail";
    //hack to make thin maps a bit thicker
    var aspectratio = Model.ResourceByMapResourceID.MapSizeRatio;
    if (aspectratio >= 2)
    {
        aspectratio /= 2;
    }
    var allPlayers = Model.SpringBattlePlayers.Where(x => !x.IsSpectator).OrderByDescending(x => x.Account.GetIconLevel()).OrderByDescending(x => x.Account.Rank).ToList();
    var allBots = Model.SpringBattleBots.ToList();
    var allAllyIDs = Model.GetAllyteamIds();
    var allWinChances = Model.GetAllyteamWinChances();
    string subtitle = "";
    if (!string.IsNullOrEmpty(Model.Title))
    {
        if (Model.Account != null)
        {
            subtitle = Model.Title + " hosted by " + Html.PrintAccount(Model.Account);
        }
        else
        {
            subtitle = "AutoHost: " + Model.Title;
        }
    }
}
<style>
    .battlefield {
        position: relative;
        height: 80vh;
        text-align: center;
    }

    .battlefield > img {
        /*position: absolute;*/
        display: block;
        height: 80vh;
        max-width: 100%;
        margin-left: auto;
        margin-right: auto;
    }

    .teams {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-around;
        z-index: 2;
    }

    .team, .spectators {
        background: rgba(0,0,0,0.8);
        padding: 1em;
    }

    .spectators {
        display: inline-block;
        text-align: left;
    }

    .infowrapper {
        margin: 1em auto;
        text-align: center;
    }

    .info {
        display: inline-block;
        text-align: left;
    }

    .replay-actions {
        position: absolute;
        left: 1em;
        right: 1em;
    }
</style>
<div class="page-summary">
    <div class="replay-actions">
        <a class="replay-action back" href="@Url.Action("Index")">
            <i class="fa fa-share fa-flip-horizontal"></i><span class="full-text">Back to List</span>
        </a>
        @if (!string.IsNullOrEmpty(Model.ReplayFileName))
        {
            // TODO: is SpringBattleID included in start replay string?
            //Html.PrintSpringLink(string.Format("@start_replay:{0},{1},{2},{3}",
            //GlobalConst.BaseSiteUrl + "/replays/" + Path.GetFileName(Model.ReplayFileName),
            //Model.ResourceByModResourceID.InternalName,
            //Model.ResourceByMapResourceID.InternalName,
            //Model.EngineVersion,
            //Model.SpringBattleID))
            MvcHtmlString url = Html.PrintSpringLink($"@start_replay:{GlobalConst.BaseSiteUrl}/replays/{Path.GetFileName(Model.ReplayFileName)},{Model.ResourceByModResourceID.InternalName},{Model.ResourceByMapResourceID.InternalName},{Model.EngineVersion},{Model.SpringBattleID}");
            <a class="replay-action playnow" href="@url">
                <i class="fa fa-share"></i><span class="full-text">Watch Now</span>
            </a>
        }
    </div>
    <div class="replay-info">
        <b class="center">@Model.Teams on @Model.ResourceByMapResourceID.InternalName</b>
        <b class="center">@Html.Raw(subtitle)</b>

        @*<span class="popularity">
            <i class="fa fa-download"></i><span class="full-text">Downloads:</span> @m.DownloadCount
        </span>*@
    </div>
</div>
<div class="content">
    <div class="replay-actions">
        <a class="replay-action back" href="@Url.Action("Index")">
            <i class="fa fa-share fa-flip-horizontal"></i><span class="full-text">Back to List</span>
        </a>
        @if (!string.IsNullOrEmpty(Model.ReplayFileName))
        {
            // TODO: is SpringBattleID included in start replay string?
            //Html.PrintSpringLink(string.Format("@start_replay:{0},{1},{2},{3}",
            //GlobalConst.BaseSiteUrl + "/replays/" + Path.GetFileName(Model.ReplayFileName),
            //Model.ResourceByModResourceID.InternalName,
            //Model.ResourceByMapResourceID.InternalName,
            //Model.EngineVersion,
            //Model.SpringBattleID))
            MvcHtmlString url = Html.PrintSpringLink($"@start_replay:{GlobalConst.BaseSiteUrl}/replays/{Path.GetFileName(Model.ReplayFileName)},{Model.ResourceByModResourceID.InternalName},{Model.ResourceByMapResourceID.InternalName},{Model.EngineVersion},{Model.SpringBattleID}");
            <a class="replay-action playnow" href="@url">
                <i class="fa fa-share"></i><span class="full-text">Watch Now</span>
            </a>
        }
    </div>
    <h1 class="center">@Model.Teams on @Model.ResourceByMapResourceID.InternalName</h1>
    <h2 class="center">@Html.Raw(subtitle)</h2>
    <div id="summarytransition"></div>
    <div class="battlefield">
        <img src='/Resources/@Model.ResourceByMapResourceID.MinimapName' alt="@Model.ResourceByMapResourceID.InternalName" />

        <div class="teams">
            @foreach (var allyID in allAllyIDs)
            {
                var win = allPlayers.Any(x => x.IsInVictoryTeam && x.AllyNumber == allyID) || allBots.Any(x => x.IsInVictoryTeam && x.AllyNumber == allyID);
                var xpchange = win ? Model.WinnerTeamXpChange : Model.LoserTeamXpChange;
                <div id="team@(allyID)" class="team @(win ? "battle_winner" : "battle_loser")">
                    <h3>Team @(allyID + 1)</h3>
                    @if (Model.IsRatedMatch())
                    {
                        <div class="winchance">Win Chance: @(((int)Math.Round(1000 * allWinChances[allyID])) / 10.0)%</div>
                    }
                    @if (xpchange > 0)
                    {
                        <div class="xpchange">XP: @(win ? @Model.WinnerTeamXpChange : @Model.LoserTeamXpChange)</div>
                    }
                    @foreach (var player in allPlayers.Where(x => x.AllyNumber == allyID))
                    {
                        <div class="player">
                            @Html.PrintAccount(player.Account)
                            <div class="stats">
                                @if (Global.IsModerator && player.EloChange.HasValue)
                                {
                                    <span>Rank: @player.EloChange.Value.ToString("F1")</span>
                                }
                            </div>
                            <div class="awards">
                                @foreach (var award in Model.AccountBattleAwards.Where(a => a.AccountID == player.AccountID))
                                {
                                    <img src="~/img/Awards/trophy_@(award.AwardKey).png" title="@award.AwardDescription" />
                                }
                            </div>
                            <div class="death">
                                @if (player.LoseTime.HasValue)
                                {
                                    <span>Died in @TimeSpan.FromSeconds(player.LoseTime.Value).ToReadableTime()</span>
                                }
                            </div>
                        </div>
                    }
                    @foreach (var b in allBots.Where(x => x.AllyNumber == allyID))
                    {
                        <div class="bot">
                            <i class="fa fa-microchip"></i> @b.BotName [@(b.BotAI)]
                        </div>
                    }
                </div>
            }
        </div>
    </div>
    <div class="infowrapper">
        @if (Model.SpectatorCount > 0)
        {
            <div class="spectators">
                <h3>Spectators</h3>
                @foreach (var spec in Model.SpringBattlePlayers.Where(x => x.IsSpectator))
                {
                    <div class="spectator">@Html.PrintAccount(spec.Account)</div>
                }
            </div>
        }
    </div>
    <div class="infowrapper">
        <div class="info">
            <div>
                <div class="infokey">Map: </div>
                <div class="infovalue">
                    <a href="@Url.Action("Detail", "Maps", new { id = Model.MapResourceID })">
                        @Model.ResourceByMapResourceID.InternalName
                    </a>
                </div>
            </div>
            <div>
                <div class="infokey">Host: </div>
                <div class="infovalue">@(Model.Account != null ? Html.PrintAccount(Model.Account) : new MvcHtmlString("Auto Host"))</div>
            </div>
            <div>
                <div class="infokey">Title: </div>
                <div class="infovalue">@(Model.Title ?? "Not Available")</div>
            </div>
            <div>
                <div class="infokey">Duration: </div>
                <div class="infovalue">@TimeSpan.FromSeconds(Model.Duration).ToReadableTime()</div>
            </div>
            <div>
                <div class="infokey">Start Date: </div>
                <div class="infovalue">@Model.StartTime.ToAgoString()</div>
            </div>
            <div>
                <div class="infokey">Game Version: </div>
                <div class="infovalue">@Model.ResourceByModResourceID.InternalName</div>
            </div>
            <div>
                <div class="infokey">Engine Version: </div>
                <div class="infovalue">@(Model.EngineVersion ?? "Not Available")</div>
            </div>
            <div>
                <div class="infokey">Player Count:</div>
                <div class="infovalue">@Model.PlayerCount</div>
            </div>
            <div>
                <div class="infokey">Spectator Count:</div>
                <div class="infovalue">@Model.SpectatorCount</div>
            </div>
            <div>
                <div class="infokey">Bots: </div>
                <div class="infovalue">@Model.HasBots</div>
            </div>
            <div>
                <div class="infokey">Mission: </div>
                <div class="infovalue">@Model.IsMission</div>
            </div>
        </div>
    </div>
    <div class="misc">
        @if (!string.IsNullOrEmpty(Model.ReplayFileName) && !ZeroKWeb.Global.IsLobbyAccess)
        {
            <a href='/replays/@Model.ReplayFileName'>Manual download</a>
        }
    </div>
</div>
@if (!ViewBag.ShowWinners)
{
    <a class="textbutton" href="@Url.Action("Detail", new { id = Model.SpringBattleID, ShowWinners = true })">Show winners</a>
    <br />
}
<br />
@if (Global.IsModerator)
{
    <div class="admin">
        <form action="@Url.Action("SetApplicableRatings", new { BattleID = Model.SpringBattleID })" method="post">
            @Html.AntiForgeryToken()
            Counts for competitive skill rating: @Html.CheckBox("MatchMaking", Model.ApplicableRatings.HasFlag(RatingCategoryFlags.MatchMaking)) <br />
            Counts for casual skill rating: @Html.CheckBox("Casual", Model.ApplicableRatings.HasFlag(RatingCategoryFlags.Casual)) <br />
            Counts for planetwars skill rating: @Html.CheckBox("PlanetWars", Model.ApplicableRatings.HasFlag(RatingCategoryFlags.Planetwars)) <br />
            <input type="submit" />
        </form>
    </div>
}
<br />
@if (Model.Events.Any())
{
    <h3>
        PlanetWars events
    </h3>
    @Html.Action("Events", "Planetwars", new { springBattleID = Model.SpringBattleID, partial = true })
}
@{Html.RenderPartial("CommentList", new ZeroKWeb.Models.CommentList() { Thread = Model.ForumThread, ActionData = new { springBattleID = Model.SpringBattleID, threadID = Model.ForumThreadID } });}
